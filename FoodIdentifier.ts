// Copyright 2020 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//    https://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// A reference to an ingredient in the FDC database.
export interface FDCFoodIdentifier {
  foodType: 'FDC Food',
  fdcId: number,
}

// A reference to an ingredient no in the FDC database, e.g. custom ingredient
// or recipe.
export interface LocalFoodIdentifier {
  foodType: 'Local Food',
  bookmarkId: string,
}

export type FoodIdentifier = FDCFoodIdentifier | LocalFoodIdentifier;

/**
 * Generate a URL representing 
 * 
 * While this code is not specific to Apps script, it does assume that
 * local ingredients are represented by links within the same document.
 * 
 * FDC foods are represented by a link to the FDC website which contains
 * all the information associated with that food in the FDC database.
 * 
 * @param FoodIdentifier The food to be generated.
 */
export function generateUrl(foodIdentifier: FoodIdentifier): string {
  switch (foodIdentifier.foodType) {
    case 'FDC Food':
      return 'https://fdc.nal.usda.gov/fdc-app.html#/food-details/' + foodIdentifier.fdcId + '/nutrients';
    case 'Local Food':
      return '#bookmark=' + foodIdentifier.bookmarkId;
  }
}

/**
 * Parse a URL generated by generateUrl.
 * 
 * The URLs generated by generateUrl are used as identifiers for ingredients
 * both in the client (js) code for the sidebar and also in the recipe document
 * where ingredients are identified by links.
 * 
 * @param url The URL to be parsed.
 */
export function parseUrl(url: string): FoodIdentifier | null {
  let fdcIdMatch = url.match('^https://(?:[^/]*)(?:[^\\d]*)(\\d*)');
  let bookmarkIdMatch = url.match('^#bookmark=(.*)');
  if (fdcIdMatch) {
    return {foodType: 'FDC Food', fdcId: Number(fdcIdMatch[1])};
  } else if (bookmarkIdMatch) {
    return {foodType: 'Local Food', bookmarkId: bookmarkIdMatch[1]}
  } else {
    return null;
  }
}